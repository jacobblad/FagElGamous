@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
    var roles = (List<IdentityRole>)ViewData["roles"];
}

<div id="container_demo">
    <div id="wrapper">
        <div id="login" class="animate form">
            <section>
                <form asp-route-returnUrl="@Model.ReturnUrl" method="post" autocomplete="on" id="account">
                    <h4>Create a new account.</h4>
                    <hr />
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Input.Email" class="youmail" data-icon="e">Email:</label>
                        <input asp-for="Input.Email" class="form-control" placeholder="mysupermail@mail.com" />
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Input.Password" class="youpasswd" data-icon="p">Password:</label>
                        <input asp-for="Input.Password" class="form-control" placeholder="eg. X8df!90EO" />
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Input.ConfirmPassword" class="youpasswd" data-icon="p"></label>
                        <input asp-for="Input.ConfirmPassword" class="form-control" placeholder="Confirm Password" />
                        <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Input.Name">Role</label>
                        <select asp-for="Input.Name" class="form-control" asp-items='new SelectList(roles,"Id","Name")'>
                        </select>
                        <span asp-validation-for="Input.Name" class="text-danger"></span>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary">Register</button>
                </form>
            </section>
        </div>
    </div>
</div>
        <!--<div class="col-md-6 col-md-offset-2">

            <h4>Use another service to register.</h4>
            <hr />-->
            @*@{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }*@
            <!--</section>
        </div>
    </div>
        </div>-->

        @section Scripts {
            <partial name="_ValidationScriptsPartial" />
        }
